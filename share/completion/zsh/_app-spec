#compdef app-spec

_app-spec() {
    local program=app-spec
    typeset -A opt_args
    local curcontext="$curcontext" state line context


            # ---- Command: 
        _arguments -s  \
            '1: :->cmd1' \
            '*: :->args' \
                '(--help -h)'{--help,-h}'[Show command help]' \
        && ret=0


        case $state in
        cmd1)
            _alternative 'args:cmd2:((_complete\:"Generate self completion" completion\:"Generate completion for a specified apec file" help\:"Show command help"))'
        ;;
        args)
            case $line[1] in
                _complete)

                # ---- Command: _complete
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->cmd2' \
                    '*: :->args' \
                        '--name[name of the program]:name' \
                && ret=0


            case $state in
            cmd2)
                _alternative 'args:cmd3:((bash\:"for bash" zsh\:"for zsh"))'
            ;;
            args)
                    case $line[2] in
                    bash)

                    # ---- Command: _complete bash
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                                '--without-description[generate without description]' \
                        && ret=0


                ;;
                    zsh)

                    # ---- Command: _complete zsh
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                        && ret=0


                ;;
            esac

            ;;
            esac
            ;;
                completion)

                # ---- Command: completion
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->cmd2' \
                    '*: :->args' \
                        '--name[name of the program]:name' \
                && ret=0


            case $state in
            cmd2)
                _alternative 'args:cmd3:((bash\:"for bash" zsh\:"for zsh"))'
            ;;
            args)
                    case $line[2] in
                    bash)

                    # ---- Command: completion bash
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                '3: :->spec_file' \
                            '*: :->args' \
                                '--without-description[generate without description]' \
                        && ret=0

                case $state in
                        spec_file)
_files
                        ;;
                esac

                ;;
                    zsh)

                    # ---- Command: completion zsh
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                '3: :->spec_file' \
                            '*: :->args' \
                        && ret=0

                case $state in
                        spec_file)
_files
                        ;;
                esac

                ;;
            esac

            ;;
            esac
            ;;
                help)

                # ---- Command: help
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->cmd2' \
                    '*: :->args' \
                        '--all[]' \
                && ret=0


            case $state in
            cmd2)
                _alternative 'args:cmd3:((_complete completion))'
            ;;
            args)
                    case $line[2] in
                    _complete)

                    # ---- Command: help _complete
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '3: :->cmd3' \
                            '*: :->args' \
                        && ret=0


                case $state in
                cmd3)
                    _alternative 'args:cmd4:((bash zsh))'
                ;;
                args)
                            case $line[3] in
                        bash)

                        # ---- Command: help _complete bash
                                _arguments -s -C \
                                    '1: :->cmd1' \
                                    '2: :->cmd2' \
                                    '3: :->cmd3' \
                                    '*: :->args' \
                                && ret=0


                    ;;
                        zsh)

                        # ---- Command: help _complete zsh
                                _arguments -s -C \
                                    '1: :->cmd1' \
                                    '2: :->cmd2' \
                                    '3: :->cmd3' \
                                    '*: :->args' \
                                && ret=0


                    ;;
                esac

                ;;
                esac
                ;;
                    completion)

                    # ---- Command: help completion
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '3: :->cmd3' \
                            '*: :->args' \
                        && ret=0


                case $state in
                cmd3)
                    _alternative 'args:cmd4:((bash zsh))'
                ;;
                args)
                            case $line[3] in
                        bash)

                        # ---- Command: help completion bash
                                _arguments -s -C \
                                    '1: :->cmd1' \
                                    '2: :->cmd2' \
                                    '3: :->cmd3' \
                                    '*: :->args' \
                                && ret=0


                    ;;
                        zsh)

                        # ---- Command: help completion zsh
                                _arguments -s -C \
                                    '1: :->cmd1' \
                                    '2: :->cmd2' \
                                    '3: :->cmd3' \
                                    '*: :->args' \
                                && ret=0


                    ;;
                esac

                ;;
                esac
                ;;
            esac

            ;;
            esac
            ;;
        esac

        ;;
        esac

}

