#compdef app-spec

_app-spec() {
    local program=app-spec
    typeset -A opt_args
    local curcontext="$curcontext" state line context


        # ---- Command: 
        _arguments -s  \
            '1: :->cmd1' \
            '*: :->args' \
            '(--help -h)'{--help,-h}'[Show command help]' \
            && ret=0


        case $state in
        cmd1)
            _alternative 'args:cmd2:((_complete\:"Generate self completion" completion\:"Generate completion for a specified spec file" help\:"Show command help" pod\:"Generate pod"))'
        ;;
        args)
            case $line[1] in
            _complete)

                # ---- Command: _complete
                _arguments -s -C \
                    '1: :->cmd1' \
                    '*: :->args' \
                    '--name[name of the program]:name' \
                    '--zsh[for zsh]' \
                    '--bash[for bash]' \
                    && ret=0


                case $state in
                args)

                ;;
                *)

                ;;
                esac
            ;;
            completion)

                # ---- Command: completion
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->spec_file' \
                    '*: :->args' \
                    '--name[name of the program]:name' \
                    '--zsh[for zsh]' \
                    '--bash[for bash]' \
                    && ret=0

                case $state in
                spec_file)
_files
                ;;
                esac

                case $state in
                args)

                ;;
                *)

                ;;
                esac
            ;;
            help)

                # ---- Command: help
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->cmd2' \
                    '*: :->args' \
                    '--all[]' \
                    && ret=0


                case $state in
                cmd2)
                    _alternative 'args:cmd3:((_complete completion pod))'
                ;;
                args)
                    case $line[2] in
                    _complete)

                        # ---- Command: help _complete
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                            && ret=0


                        case $state in
                        args)

                        ;;
                        *)

                        ;;
                        esac
                    ;;
                    completion)

                        # ---- Command: help completion
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                            && ret=0


                        case $state in
                        args)

                        ;;
                        *)

                        ;;
                        esac
                    ;;
                    pod)

                        # ---- Command: help pod
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                            && ret=0


                        case $state in
                        args)

                        ;;
                        *)

                        ;;
                        esac
                    ;;
                    esac

                ;;
                *)

                ;;
                esac
            ;;
            pod)

                # ---- Command: pod
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->spec_file' \
                    '*: :->args' \
                    && ret=0

                case $state in
                spec_file)
_files
                ;;
                esac

                case $state in
                args)

                ;;
                *)

                ;;
                esac
            ;;
            esac

        ;;
        *)

        ;;
        esac

}



